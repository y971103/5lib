<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 게시판 처리 SQL -->
<mapper namespace="global.sesoc.library.dao.BoardMapper">

<!-- 공지사항 게시글 저장 -->
<insert id="insertNotice" parameterType="Notice">
	insert into notice
		(
			infonum
			, title
			, id
			, hits
			, content
			, inputdate
		)
	values 
		(
			#{infonum}
			, #{title}
			, #{id}
			, #{hits}
			, #{content}
			, #{inputdate}
		)
</insert>

<!-- 공지사항 게시글 읽기 -->
<select id="getNotice" parameterType="int" resultType="Notice">
	select 
			infonum
			, title
			, id
			, hits
			, content
			, to_char(inputdate, 'YYYY-MM-DD HH24:MI:SS') inputdate
	from 
		notice
	where 
		infonum = #{infonum}
</select>

<!-- 조회수 1 증가 -->
<update id="addHits" parameterType="int">
	update
		notice
	set
		hits = hits + 1
	where
		infonum = #{infonum}
</update>

<!-- 전체 글 개수 -->
<select id="getTotal" parameterType="string" resultType="int">
	select 
		count(*)
	from 
		notice
	<if test="_parameter != null">
	where 
		title like '%' || #{searchText} || '%'
	</if>
</select>

<!-- 현재 페이지 공지사항 목록 -->
<select id="listNotice" parameterType="string" resultType="Notice">
	select 
		infonum
		, title
		, id
		, hits
		, to_char(inputdate, 'YYYY-MM-DD HH24:MI:SS') inputdate
	from 
		notice
	<if test="_parameter != null">
	where 
		title like '%' || #{searchText} || '%'
	</if>
	order by infonum desc
</select>


<!-- 공지사항 게시글 삭제 -->
<delete id="deleteNotice" parameterType="Notice">
	delete from
		notice
	where
		infonum = #{infonum}
		and id = #{id}
</delete>

<!-- 공지사항 게시글 수정 -->
<update id="updateNotice" parameterType="Notice">
	update 
		notice
	set
		title = #{title}
		, content = #{content}
	where
		infonum = #{infonum}
		and id = #{id}
</update>



<!--    ###############################  여기까지 공지사항 XML  ################################# -->


<!-- QnA 게시글 저장 -->
<insert id="insertQnA" parameterType="QnA">
	insert into QnA
		(
			QnAnum
			, QnAtitle
			, id
			, hits
			, QnAcontent
			, inputdate
		)
	values 
		(
			#{QnAnum}
			, #{QnAtitle}
			, #{id}
			, #{hits}
			, #{QnAcontent}
			, #{inputdate}
		)
</insert>

<!-- QnA 게시글 읽기 -->
<select id="getNotice" parameterType="int" resultType="Notice">
	select 
			QnAnum
			, QnAtitle
			, id
			, hits
			, QnAcontent
			, to_char(inputdate, 'YYYY-MM-DD HH24:MI:SS') inputdate
	from 
		QnA
	where 
		QnAnum = #{QnAnum}
</select>

<!-- 조회수 1 증가 -->
<update id="addHits" parameterType="int">
	update
		QnA
	set
		hits = hits + 1
	where
		QnAnum = #{QnAnum}
</update>

<!-- 전체 글 개수 -->
<select id="getTotal" parameterType="string" resultType="int">
	select 
		count(*)
	from 
		QnA
	<if test="_parameter != null">
	where 
		QnAtitle like '%' || #{searchText} || '%'
	</if>
</select>

<!-- 현재 페이지 QnA 목록 -->
<select id="listQnA" parameterType="string" resultType="QnA">
	select 
		QnAnum
		, QnAtitle
		, id
		, hits
		, to_char(inputdate, 'YYYY-MM-DD HH24:MI:SS') inputdate
	from 
		QnA
	<if test="_parameter != null">
	where 
		QnAtitle like '%' || #{searchText} || '%'
	</if>
	order by QnAnum desc
</select>


<!-- QnA 게시글 삭제 -->
<delete id="deleteQnA" parameterType="QnA">
	delete from
		QnA
	where
		QnAnum = #{QnAnum}
		and id = #{id}
</delete>

<!-- QnA 게시글 수정 -->
<update id="updateQnA" parameterType="QnA">
	update 
		QnA
	set
		QnAtitle = #{QnAtitle}
		, QnAcontent = #{QnAcontent}
	where
		QnAnum = #{QnAnum}
		and id = #{id}
</update>


<!--    ###############################  여기까지 QnA XML  ################################# -->


<!-- QnA 리플 저장 -->
<insert id="insertQnAreply" parameterType="QnA_reply">
	insert into QnA_reply (
		QnAreplynum
		, content
		, id
		, QnAnum
	)
	values (
		QnA_reply_seq.nextval					<!-- ★ 댓글 번호에 사용할 시퀀스 만들어주기!! -->
		, #{QnAnum}
		, #{content}
		, #{id}
	)
</insert>

<!-- QnA 리플 삭제 -->
<delete id="deleteQnAreply" parameterType="QnA_reply">
	delete from
		QnA_reply
	where
		QnAreplynum = #{QnAreplynum}
		and id = #{id}
</delete>

<!-- QnA 리플 목록 -->
<select id="listQnAreply" parameterType="int" resultType="QnA_reply">
	select 
		QnAreplynum
		, QnAnum
		, content
		, id
	from 
		QnA_reply
	where
		QnAnum = #{QnAnum}
	order by 
		QnAreplynum desc
</select>

<!-- QnA 리플 수정 -->
<update id="updateQnAreply" parameterType="QnA_reply">
	update
		QnA_reply
	set
		content = #{content}
	where
		QnAreplynum = #{QnAreplynum}
		and id = #{id}
</update>

</mapper>
